datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String  @id @default(cuid())
  email          String  @unique
  username       String  @unique @default(cuid())
  firstName      String?
  lastName       String?
  profilePicture String?

  // Datetime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  items      Item[]
  categories Category[]
  notes      Note[]

  @@unique([email, username])
}

model Item {
  id                  String    @id @default(cuid())
  title               String
  description         String?
  mainImage           String?
  mainImageExpiration DateTime?

  // Datetime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId     String
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?
  notes      Note[]
}

model Note {
  id      String @id @default(cuid())
  content String

  // Datetime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
  item   Item   @relation(fields: [itemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  itemId String
}

model Category {
  id          String  @id @default(cuid())
  name        String
  description String?
  color       String

  // DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  items  Item[]
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model QR {
  id String @id @default(cuid())

  // Data of the qr code. Can be a url, text, etc.
  data String
  
  // Version of the QR code based on spec from Denso wave
  version Int @default(0)

  // Error correction level based on spec from Denso wave
  errorCorrection ErrorCorrection @default(L)

  // DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ErrorCorrection {
  L
  M
  Q
  H
}
